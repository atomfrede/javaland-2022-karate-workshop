/*
 * This file is generated by jOOQ.
 */
package com.github.atomfrede.javaland.beleidigungsduell.gen.jooq.tables.records;


import com.github.atomfrede.javaland.beleidigungsduell.gen.jooq.tables.Beleidigung;

import java.util.UUID;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BeleidigungRecord extends UpdatableRecordImpl<BeleidigungRecord> implements Record5<Long, UUID, UUID, String, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.beleidigung.id</code>.
     */
    public BeleidigungRecord setId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.beleidigung.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.beleidigung.beleidigungs_id</code>.
     */
    public BeleidigungRecord setBeleidigungsId(UUID value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.beleidigung.beleidigungs_id</code>.
     */
    public UUID getBeleidigungsId() {
        return (UUID) get(1);
    }

    /**
     * Setter for <code>public.beleidigung.antwort_id</code>.
     */
    public BeleidigungRecord setAntwortId(UUID value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.beleidigung.antwort_id</code>.
     */
    public UUID getAntwortId() {
        return (UUID) get(2);
    }

    /**
     * Setter for <code>public.beleidigung.beleidigungs_template</code>.
     */
    public BeleidigungRecord setBeleidigungsTemplate(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.beleidigung.beleidigungs_template</code>.
     */
    public String getBeleidigungsTemplate() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.beleidigung.antwort_template</code>.
     */
    public BeleidigungRecord setAntwortTemplate(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>public.beleidigung.antwort_template</code>.
     */
    public String getAntwortTemplate() {
        return (String) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<Long, UUID, UUID, String, String> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<Long, UUID, UUID, String, String> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Beleidigung.BELEIDIGUNG.ID;
    }

    @Override
    public Field<UUID> field2() {
        return Beleidigung.BELEIDIGUNG.BELEIDIGUNGS_ID;
    }

    @Override
    public Field<UUID> field3() {
        return Beleidigung.BELEIDIGUNG.ANTWORT_ID;
    }

    @Override
    public Field<String> field4() {
        return Beleidigung.BELEIDIGUNG.BELEIDIGUNGS_TEMPLATE;
    }

    @Override
    public Field<String> field5() {
        return Beleidigung.BELEIDIGUNG.ANTWORT_TEMPLATE;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public UUID component2() {
        return getBeleidigungsId();
    }

    @Override
    public UUID component3() {
        return getAntwortId();
    }

    @Override
    public String component4() {
        return getBeleidigungsTemplate();
    }

    @Override
    public String component5() {
        return getAntwortTemplate();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public UUID value2() {
        return getBeleidigungsId();
    }

    @Override
    public UUID value3() {
        return getAntwortId();
    }

    @Override
    public String value4() {
        return getBeleidigungsTemplate();
    }

    @Override
    public String value5() {
        return getAntwortTemplate();
    }

    @Override
    public BeleidigungRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public BeleidigungRecord value2(UUID value) {
        setBeleidigungsId(value);
        return this;
    }

    @Override
    public BeleidigungRecord value3(UUID value) {
        setAntwortId(value);
        return this;
    }

    @Override
    public BeleidigungRecord value4(String value) {
        setBeleidigungsTemplate(value);
        return this;
    }

    @Override
    public BeleidigungRecord value5(String value) {
        setAntwortTemplate(value);
        return this;
    }

    @Override
    public BeleidigungRecord values(Long value1, UUID value2, UUID value3, String value4, String value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached BeleidigungRecord
     */
    public BeleidigungRecord() {
        super(Beleidigung.BELEIDIGUNG);
    }

    /**
     * Create a detached, initialised BeleidigungRecord
     */
    public BeleidigungRecord(Long id, UUID beleidigungsId, UUID antwortId, String beleidigungsTemplate, String antwortTemplate) {
        super(Beleidigung.BELEIDIGUNG);

        setId(id);
        setBeleidigungsId(beleidigungsId);
        setAntwortId(antwortId);
        setBeleidigungsTemplate(beleidigungsTemplate);
        setAntwortTemplate(antwortTemplate);
    }
}
